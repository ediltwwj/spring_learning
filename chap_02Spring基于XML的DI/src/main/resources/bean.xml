<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--
         在当前类需要用到其他类的对象，由spring为我们提供，我们只需要在配置文件中说明依赖关系的维护，就称之为依赖注入
         能注入的数据有三类:
            1、基本类型和String
            2、其他bean类型(在配置文件中或者注解配置过的bean)
            3、复杂类型/集合类型
         注入的方式有三种:
            1、使用构造函数提供
            2、使用set方法提供
            3、使用注解提供(明天的内容)
    -->
    <!-- 构造函数注入 AccountServiceImpl.java
         使用的标签: constructor-arg
         标签出现的位置: bean标签内部
         标签中的属性:
            type: 用于指定要注入的数据的数据类型，该数据类型也是构造函数中某个或某些参数的类型,无法单独使用
            index: 用于指定要注入的数据给构造函数中指定索引位置的参数赋值,索引位置从0开始,要记索引对应的类型，不然容易错
            name: 用于指定给构造函数中指定名称的参数赋值               常用的
            ===========================以上三个用于指定给构造函数中哪个参数赋值==============================
            value: 用于提供基本类型和String类型的数据
            ref: 用于指定其他的bean类型数据，它指的就是在spring的IOC核心容器中出现过的bean对象

         优势:
            在获取bean对象时，注入数据是必须的操作，否则对象无法构建成功
         弊端:
            改变了bean对象的实例化方式，使我们再创建对象时，如果用不到这些数据也必须提供
    -->
    <bean id="accountService" class="com.spring.service.impl.AccountServiceImpl">
        <constructor-arg name="name" value="test"></constructor-arg>
        <constructor-arg name="age" value="18"></constructor-arg>
        <constructor-arg name="birthday" ref="now"></constructor-arg>
    </bean>

    <!-- 配置一个日期对象 -->
    <bean id="now" class="java.util.Date"></bean>

    <!-- set方法注入(更常用)   AccountServiceImpl2.java
         涉及的标签: property
         出现的位置: bean标签的内部
         标签中的属性:
            name: 用于指定注入时所调用的set方法名称,如setName则参数就是name
            value: 用于提供基本类型和String类型的数据
            ref: 用于指定其他的bean类型数据，它指的就是在spring的IOC核心容器中出现过的bean对象

         优势:
            创建对象时没有明确的限制，可以直接使用默认构造函数
         弊端:
            如果某个成员必须有值，则获取对象时有可能set方法没有执行
    -->
    <bean id="accountService2" class="com.spring.service.impl.AccountServiceImpl2">
        <property name="name" value="Test"></property>
        <property name="age" value="20"></property>
        <property name="birthday" ref="now"></property>
    </bean>

    <!-- 复杂类型的注入/集合类型的注入
        用于给List结构集合注入的标签: list array set
        用于个Map结构集合注入的标签:map  props
        结构相同，标签可以互换,所以记List和Map就够了!
    -->
    <bean id="accountService3" class="com.spring.service.impl.AccountServiceImpl3">
        <property name="myStrs">
            <array>
                <value>Str1</value>
                <value>Str2</value>
                <value>Str3</value>
            </array>
        </property>
        <property name="myList">
            <list>
                <value>List1</value>
                <value>List2</value>
            </list>
        </property>
        <property name="mySet">
            <set>
                <value>Set1</value>
                <value>Set2</value>
            </set>
        </property>
        <property name="myMap">
            <map>
                <entry key="map1" value="value1"></entry>
                <entry key="map2">
                    <value>value2</value>
                </entry>
            </map>
        </property>
        <property name="myPros">
            <props>
                <prop key="prop1">value1</prop>
                <prop key="prop2">value2</prop>
            </props>
        </property>
    </bean>

</beans>
